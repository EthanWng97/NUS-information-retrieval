1. You will observe that a large portion of the terms in the dictionary are numbers. However, we normally do not use numbers as query terms to search. Do you think it is a good idea to remove these number entries from the dictionary and the postings lists? Can you propose methods to normalize these numbers? How many percentage of reduction in disk storage do you observe after removing/normalizing these numbers?

    It’s a good idea because removing all numbers can reduce the storage size of postings effectively. 

    If we want to normalize the numbers, one possible method is to convert all numbers to unique token like “#$#”, which occurs rarely in normal sentences. Thus, after people looking for some words and numbers, it can normalize the words and numbers and do searching in the dictionary and postings file.

    In our experiment, we use token.isalpha() to remove all non-alpha words and result shows below:
    BEFORE: 782KB(dictionary.txt) + 9.2 MB(postings.txt)
    AFTER: 389KB (dictionary.txt) + 6.5MB (postings.txt)
    As we can see, it definitely reduce storage size.

2. What do you think will happen if we remove stop words from the dictionary and postings file? How does it affect the searching phase?

    As conclusion mentioned above, it will reduce storage size. (stop_words = set(stopwords.words('english')))
    BEFORE: 782KB(dictionary.txt) + 9.2 MB(postings.txt)
    AFTER: 782KB (dictionary.txt) + 8.8MB (postings.txt)

    When people do searching, for example, “is”, it will show no result because there is no term “is” in the dictionary.

3. The NLTK tokenizer may not correctly tokenize all terms. What do you observe from the resulting terms produced by sent_tokenize() and word_tokenize()? Can you propose rules to further refine these results?

    some character entities are incorrectly tokenized. For example, “&lt;”, which refers to the > and < character in HTML, is tokenized to 
    &
    lt
    ;
    One possible rule is to set a proper window to detect all letters together, if the window detects the letter & and It, ; following, it will combine them together.